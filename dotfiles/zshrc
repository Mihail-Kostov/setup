#!/usr/bin/env zsh

# export PATH
# OS X 10.10+ doesn't execute /etc/launchd.conf
# and GUI app doesn't get /etc/paths
# in order to get the right PATH in Atom.app Terminal (atom-term2)
# here is my PATH, hardcoded
# https://github.com/webBoxio/atom-term2/issues/50
# export PATH=$(cat /etc/paths | xargs | tr " " :)
export PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin

#$SETUP_PATH doesn't exist yet
source $HOME/setup/setupsh/index

# find $SETUP_PATH if not defined using symlink real dirname
#__FILENAME__=${0} # only for sourced file, .zshrc is not sourced
__FILENAME__=${ZDOTDIR-~}/.zshrc
if [[ -z "$SETUP_PATH" ]] then
  export SETUP_PATH=$(cd $(dirname $(readlink $__FILENAME__))/../../ && pwd)
fi

export DIR_SYNC=$HOME/Sync
export DIR_DEV=$DIR_SYNC/Development

# add personal bin in the path
export PATH=$PATH:./bin
export PATH=$PATH:./.bin
export PATH=$DIR_DEV/.bin:$PATH

export EDITOR="atom"
source $SETUP_PATH/submodules/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

HISTFILE=~/.history
HISTSIZE=SAVEHIST=99999
setopt APPEND_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_FCNTL_LOCK
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_NO_STORE
setopt HIST_SAVE_NO_DUPS
setopt HIST_VERIFY
setopt INC_APPEND_HISTORY
#setopt PRINT_EXIT_VALUE

export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8

#export CC=llvm-gcc-4.2

ZSH_SITE_FUNCTION=/usr/local/share/zsh/site-functions
if [ ! -e  $ZSH_SITE_FUNCTION/prompt_pure_setup ]
then
  mkdir -p $ZSH_SITE_FUNCTION
  silent-rm $ZSH_SITE_FUNCTION/prompt_pure_setup
  ln -s "$SETUP_PATH/submodules/pure/pure.zsh" $ZSH_SITE_FUNCTION/prompt_pure_setup
fi
if [ ! -e  $ZSH_SITE_FUNCTION/async ]
then
  mkdir -p $ZSH_SITE_FUNCTION
  silent-rm $ZSH_SITE_FUNCTION/async
  ln -s "$SETUP_PATH/submodules/pure/async.zsh" $ZSH_SITE_FUNCTION/async
fi
fpath=("/usr/local/share/zsh/site-functions" $fpath)
#PURE_CMD_MAX_EXEC_TIME=2
autoload -U promptinit && promptinit
prompt pure
# add %F{red}%(?..[%?] )%f to include exit code [code]
PROMPT='%(?.%F{green}.%F{red}❯%F{green})❯%f '

export OS_ICONS_DIR=/System/Library/CoreServices/CoreTypes.bundle/Contents/Resources

# also load aliases from projets
if [[ -d $DIR_DEV ]]
then
  for source in `find $DIR_DEV -d -maxdepth 4 -name \*.aliases  | perl -lne 'print tr:/::, " $_"' | sort -n | cut -d' ' -f2`
  do
    source $source
  done
fi

# disable ._ file
export COPYFILE_DISABLE=true

# Man pages colors
export LESS_TERMCAP_mb=$(tput bold; tput setaf 2)
export LESS_TERMCAP_md=$(tput bold)
export LESS_TERMCAP_me=$(tput sgr0)
export LESS_TERMCAP_so=$(tput bold; tput rev)
export LESS_TERMCAP_se=$(tput rmso; tput sgr0)
export LESS_TERMCAP_us=$(tput setaf 4; tput bold)
export LESS_TERMCAP_ue=$(tput sgr0)
export LESS_TERMCAP_mr=$(tput rev)
export LESS_TERMCAP_mh=$(tput dim)
export LESS_TERMCAP_ZN=$(tput ssubm)
export LESS_TERMCAP_ZV=$(tput rsubm)
export LESS_TERMCAP_ZO=$(tput ssupm)
export LESS_TERMCAP_ZW=$(tput rsupm)


alias list-aliases="alias | sed 's/=.*//'"
alias list-functions="declare -f | grep '^[a-z].* () {' | sed 's/{$//'" # show non _prefixed functions
alias list="cat <(list-aliases) <(list-functions) | sort"
alias search="list | grep"

# Aliases

alias fuck='eval $(thefuck $(fc -ln -1 | tail -n 1)); fc -R'
alias fak='fuck'

## ls: Detect which `ls` flavor is in use
if ls --color &> /dev/null
then # GNU `ls`
  colorflag="--color"
else # OS X `ls`
  colorflag="-G"
fi
alias l="ls -l ${colorflag}" # List all files colorized in long format
alias la="ls -la ${colorflag}" # List all files colorized in long format, including dot files
alias lsd='ls -l ${colorflag} | grep "^d"' # List only directories
alias ls="command ls ${colorflag}" # Always use color output for `ls`
export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'

## OS X
alias osx-hidden-show="defaults write com.apple.finder AppleShowAllFiles -bool true && osx-refresh"
alias osx-hidden-hide="defaults write com.apple.finder AppleShowAllFiles -bool false && osx-refresh"
alias osx-desktop-show="defaults write com.apple.finder CreateDesktop -bool true && osx-refresh"
alias osx-desktop-hide="defaults write com.apple.finder CreateDesktop -bool false && osx-refresh"
# http://apple.stackexchange.com/a/181404/34887
alias osx-internetsharing-on="sudo networksetup -setnetworkserviceenabled 'Ethernet sharing via Wifi' on"
alias osx-internetsharing-off="sudo networksetup -setnetworkserviceenabled 'Ethernet sharing via Wifi' off"
alias osx-resolutions="system_profiler SPDisplaysDataType | grep Resolution | tr -d ' '"
alias osx-flushdns="dscacheutil -flushcache"
alias osx-flushram="purge"
export OSX_INSTALL_APP="/Applications/Install OS X El Capitan.app"
alias osx-bootableusb="sudo \"$OSX_INSTALL_APP/Contents/Resources/createinstallmedia\" --volume /Volumes/Untitled --applicationpath \"$OSX_INSTALL_APP\" --nointeraction"
alias osx-dsstore-delete="find . -type f -name '*.DS_Store' -ls -delete"

# NVM
export NVM_DIR=$HOME/.nvm
source $(brew --prefix nvm)/nvm.sh

## NPM

# allow local self signed https server
export NODE_TLS_REJECT_UNAUTHORIZED="0"

### to avoid npm install -g
export PATH=$PATH:./node_modules/.bin

### some nice aliases
alias npmi="npm i"
alias npmis="npm i -S"
alias npmid="npm i -D"
alias npmt="npm test"
alias npms="npmstart" # npmstart function
alias npmr="npm run"

## Apache
APACHE_CONF_DEV_PATH=$DIR_DEV/_.conf/apache/
alias apacheconf="e $APACHE_CONF"
alias apachedevconf="e $APACHE_CONF_DEV_PATH"
alias apacheconfigtest="apachectl configtest"
alias apachestart="sudo apachectl start"
alias apacherestart="dscacheutil -flushcache && apachectl configtest && sudo apachectl restart"
alias apacheaddconf="e $APACHE_CONF_DEV_PATH/local.conf /etc/hosts"

## MySQL (from brew)
alias mysqlstart="mysql.server start"
alias mysqlstop="mysql.server stop"

## Brew cask
command -v brew > /dev/null && alias caskroom="cd $(brew --prefix)/Library/Taps/caskroom"

## Gandi.net
export GPAAS_HOST="dc0.gpaas.net"
export GPAAS_SFTP_HOST="sftp.$GPAAS_HOST"
export GPAAS_SSH_HOST="console.$GPAAS_HOST"
export GPAAS_GIT_HOST="git.$GPAAS_HOST"
export GPAAS_GIT_URL="git+ssh://$MY_GPAAS_USER@$MY_GPAAS_GIT/"
#GPAAS_SFTP="$GPAAS_SFTP_HOST"
alias gpaas_ssh="ssh $1@$GPAAS_SSH_HOST"

## Git
if [[ -f $HOME/.github_token ]]
then
  export GITHUB_TOKEN=$(cat $HOME/.github_token)
  export HOMEBREW_GITHUB_API_TOKEN=$GITHUB_TOKEN
fi

## Network
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias localip="ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'"
alias elocalip="export LOCAL_IP=$(localip)"
alias ips="ifconfig -a | grep -o 'inet6\? \(\([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)\|[a-fA-F0-9:]\+\)' | sed -e 's/inet6* //'"
alias whois="whois -h whois-servers.net" # Enhanced WHOIS lookups

## Synergy.app
alias synergy="/Applications/Synergy.app/Contents/MacOS/synergy"
alias synergys="/Applications/Synergy.app/Contents/MacOS/synergys"
alias synergyc="/Applications/Synergy.app/Contents/MacOS/synergyc"
alias synergyshome="synergys -n iMoOx"
alias synergychome="synergyc -n MacMoOx iMoOx.local"

# ssh-copy-id
# usage: sshcopy user@server [-p {port}]
alias sshcopy="ssh-copy-id -i ~/.ssh/id_rsa.pub"

# php
export PHP_VERSION=56
export PHP_VERSION_DOT=5.6
if ls /usr/local/Cellar/php$PHP_VERSION &> /dev/null
then
  export PHP_INI=/usr/local/etc/php/$PHP_VERSION_DOT/php.ini
  alias phpini="e $PHP_INI"
fi

## LOCAL CRAP
if [[ -f ~/.zshrc.local ]]; then; source ~/.zshrc.local; fi

# custom aliases
alias gh="/Applications/GitHub\ Desktop.app/Contents/MacOS/github_cli"
alias .e="setupsh-edit"
alias .o="setupsh-open"
alias wifi=osx-internetsharing-on
alias wifi-off=osx-internetsharing-off
alias echofliptable="echo '\n(╯°□°）╯︵ ┻━┻\n'"
alias fliptable="echo \"$USER/setup\"; echofliptable; setupsh-update; setupsh-run"

# added by travis gem
[ -f $HOME/.travis/travis.sh ] && source $HOME/.travis/travis.sh

# Docker
alias dockermachinedev="docker-machine start dev && eval \"\$(docker-machine env dev)\""

# see https://github.com/popomore/github-labels + MoOx/setup/dotfiles/github-issues-labels.json
alias github-labels="labels -c $HOME/.github-issues-labels.json"

# Android development
export ANDROID_HOME=/usr/local/opt/android-sdk
