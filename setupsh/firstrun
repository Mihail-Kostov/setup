#!/usr/bin/env zsh

export SETUP_PATH=$HOME/setup

# define zsh as default shell
chsh -s /bin/zsh $USER

echo "Visit https://appleseed.apple.com/sp/betaprogram to get OS X beta update if you want to enroll your Mac."
echo "Press enter to continue."
open "https://appleseed.apple.com/sp/betaprogram"
read -k

if [[ "$(uname -s)" == "Darwin" ]]
then
  # todo add an alternative to grab xcode from another computer accessible by local network

  echo "** Before running myself, please be sure you have 'git' command working **".
  echo ""
  echo "To skip 'Agreeing to the Xcode/iOS license requires admin privileges, please re-run as root via sudo.'"
  echo "  sudo xcodebuild -license"
  echo "or just open Xcode and agree the license..."
  echo ""
  echo "You may need Xcode Command line tools if you don't have Xcode setup"
  echo "You can try the following if you are on a stable OS X version (with stable Xcode)"
  echo "  xcode-select --install"
  echo ""
  echo "  /!\ If you are on an Developer Preview/Beta try (replace {VERSION})"
  echo "    sudo xcode-select --switch /Applications/Xcode{VERSION}-Beta.app/Contents/Developer/"
  echo "    xcode-select --install"
  echo ""
  echo ""
  echo "Press return when you are sure that 'git' command is available"
  read -k
fi

if [[ ! -d $SETUP_PATH/.git ]]
then
  git clone http://github.com/MoOx/setup.git $SETUP_PATH
  if [[ ! -d $SETUP_PATH/.git ]]
  then
    echo "setup have not been downloaded correctly"
    echo ""
    echo "Aborting"
  else
    # register submodules
    git -C $SETUP_PATH submodule init
  fi
else
  # assume last first run wasn't ok, so update
  git -C $SETUP_PATH pull
fi

# check it's ok this time
if [[ -d $SETUP_PATH/.git ]]
then
  # install submodule
  git -C $SETUP_PATH submodule update

  echo "setup have been downloaded correctly"
  echo ""
  echo "Running installation"

  source $SETUP_PATH/setupsh/index
  source $SETUP_PATH/setupsh/functions/full-setupsh
  full-setupsh --firstrun

  notify "Setup is done"
fi
